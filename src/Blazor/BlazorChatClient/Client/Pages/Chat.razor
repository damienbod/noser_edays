@page "/chat"

@using Blazor.Extensions

@inject HubConnectionBuilder _hubConnectionBuilder

<h1>Chat</h1>

<input @bind=message />
<button type="button" @onclick="SendMessage">Submit</button>

@code {

    string message;
    List<string> messages = new List<string>();
    HubConnection connection;

    protected override async Task OnInitializedAsync()
    {
        // in Component Initialization code
        connection = _hubConnectionBuilder // the injected one from above.
                        .WithUrl("https://localhost:5001/chatHub", // The hub URL. If the Hub is hosted on the server where the blazor is hosted, you can just use the relative path.
                        opt =>
                        {
                            opt.LogLevel = SignalRLogLevel.Trace; // Client log level
                            opt.Transport = HttpTransportType.WebSockets; // Which transport you want to use for this connection
                        })
                        .Build(); // Build the HubConnection

        // Subscribe to messages sent from the Hub to the "Receive" method by passing a handle (Func<object, Task>) to process messages.
        connection.On<string, string>("ReceiveMessage", OnReceiveMessage);
        await connection.StartAsync(); // Start the connection.
    }

    Task OnReceiveMessage(string name, string message)
    {
        messages.Add(name + " : " + message);
        StateHasChanged();
        return Task.CompletedTask;
    }

    public async Task SendMessage()
    {
        // Invoke a method on the server called "ServerMethod" and pass parameters to it.
        await connection.InvokeAsync("SendMessage", "ryp", "testy");
    }

}
